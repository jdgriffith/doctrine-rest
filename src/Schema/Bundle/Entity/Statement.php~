<?php

namespace Schema\Bundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * Statement
 *
 * @ORM\Table(name="statement", indexes={@ORM\Index(name="fk_statement_type_statement_idx", columns={"statement_type_id"}), @ORM\Index(name="fk_statement_statement_idx", columns={"parent_statement_id"})})
 * @ORM\Entity
 */
class Statement
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer", nullable=false)
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="IDENTITY")
     */
    private $id;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="post_date", type="datetime", nullable=true)
     */
    private $postDate;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="due_date", type="datetime", nullable=true)
     */
    private $dueDate;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="begin_date", type="datetime", nullable=true)
     */
    private $beginDate;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="end_date", type="datetime", nullable=true)
     */
    private $endDate;

    /**
     * @var float
     *
     * @ORM\Column(name="amount_due", type="float", precision=10, scale=0, nullable=true)
     */
    private $amountDue;

    /**
     * @var boolean
     *
     * @ORM\Column(name="paid", type="boolean", nullable=true)
     */
    private $paid;

    /**
     * @var string
     *
     * @ORM\Column(name="note", type="text", nullable=true)
     */
    private $note;

    /**
     * @var \StatementType
     *
     * @ORM\ManyToOne(targetEntity="StatementType")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="statement_type_id", referencedColumnName="id")
     * })
     */
    private $statementType;

    /**
     * @var \Statement
     *
     * @ORM\ManyToOne(targetEntity="Statement")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="parent_statement_id", referencedColumnName="id")
     * })
     */
    private $parentStatement;

    /**
     * @var \Doctrine\Common\Collections\Collection
     *
     * @ORM\ManyToMany(targetEntity="LocalGroup", mappedBy="statement")
     */
    private $group;

    /**
     * @var \Doctrine\Common\Collections\Collection
     *
     * @ORM\ManyToMany(targetEntity="Member", mappedBy="statement")
     */
    private $member;

    /**
     * @var \Doctrine\Common\Collections\Collection
     *
     * @ORM\ManyToMany(targetEntity="Local", inversedBy="statement")
     * @ORM\JoinTable(name="statement_local",
     *   joinColumns={
     *     @ORM\JoinColumn(name="statement_id", referencedColumnName="id")
     *   },
     *   inverseJoinColumns={
     *     @ORM\JoinColumn(name="local_id", referencedColumnName="id")
     *   }
     * )
     */
    private $local;

    /**
     * Constructor
     */
    public function __construct()
    {
        $this->group = new \Doctrine\Common\Collections\ArrayCollection();
        $this->member = new \Doctrine\Common\Collections\ArrayCollection();
        $this->local = new \Doctrine\Common\Collections\ArrayCollection();
    }

}

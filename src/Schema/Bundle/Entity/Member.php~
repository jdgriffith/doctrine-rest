<?php

namespace Schema\Bundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * Member
 *
 * @ORM\Table(name="member", indexes={@ORM\Index(name="fk_payment_type_member_idx", columns={"payment_type_id"}), @ORM\Index(name="fk_local_member_idx", columns={"local_id"}), @ORM\Index(name="IDX_70E4FA78297122A5", columns={"member_status_type_id"}), @ORM\Index(name="IDX_70E4FA78DAF39619", columns={"employeeType_id"})})
 * @ORM\Entity
 */
class Member
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer", nullable=false)
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="IDENTITY")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="first_name", type="string", length=45, nullable=true)
     */
    private $firstName;

    /**
     * @var string
     *
     * @ORM\Column(name="last_name", type="string", length=45, nullable=true)
     */
    private $lastName;

    /**
     * @var string
     *
     * @ORM\Column(name="middle_name", type="string", length=45, nullable=true)
     */
    private $middleName;

    /**
     * @var string
     *
     * @ORM\Column(name="suffix", type="string", length=45, nullable=true)
     */
    private $suffix;

    /**
     * @var string
     *
     * @ORM\Column(name="code", type="string", length=45, nullable=true)
     */
    private $code;

    /**
     * @var string
     *
     * @ORM\Column(name="payment", type="string", length=3, nullable=true)
     */
    private $payment;

    /**
     * @var float
     *
     * @ORM\Column(name="dues", type="float", precision=10, scale=0, nullable=true)
     */
    private $dues;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="join_date", type="datetime", nullable=true)
     */
    private $joinDate;

    /**
     * @var string
     *
     * @ORM\Column(name="reason", type="string", length=100, nullable=true)
     */
    private $reason;

    /**
     * @var string
     *
     * @ORM\Column(name="comments", type="text", nullable=true)
     */
    private $comments;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="benefit_date", type="datetime", nullable=true)
     */
    private $benefitDate;

    /**
     * @var string
     *
     * @ORM\Column(name="contest", type="string", length=100, nullable=true)
     */
    private $contest;

    /**
     * @var string
     *
     * @ORM\Column(name="guide", type="string", length=45, nullable=true)
     */
    private $guide;

    /**
     * @var string
     *
     * @ORM\Column(name="email", type="string", length=100, nullable=true)
     */
    private $email;

    /**
     * @var string
     *
     * @ORM\Column(name="ssn", type="string", length=11, nullable=true)
     */
    private $ssn;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="admin_contact_date", type="datetime", nullable=true)
     */
    private $adminContactDate;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="legal_contact_date", type="datetime", nullable=true)
     */
    private $legalContactDate;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="political_contact_date", type="datetime", nullable=true)
     */
    private $politicalContactDate;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="organizing_contact_date", type="datetime", nullable=true)
     */
    private $organizingContactDate;

    /**
     * @var string
     *
     * @ORM\Column(name="optional_field_1", type="string", length=50, nullable=true)
     */
    private $optionalField1;

    /**
     * @var string
     *
     * @ORM\Column(name="optional_field_2", type="string", length=50, nullable=true)
     */
    private $optionalField2;

    /**
     * @var boolean
     *
     * @ORM\Column(name="first_can_contact", type="boolean", nullable=true)
     */
    private $firstCanContact;

    /**
     * @var string
     *
     * @ORM\Column(name="first_phone_type", type="string", length=1, nullable=true)
     */
    private $firstPhoneType;

    /**
     * @var string
     *
     * @ORM\Column(name="second_can_contact", type="string", length=45, nullable=true)
     */
    private $secondCanContact;

    /**
     * @var string
     *
     * @ORM\Column(name="second_phone_type", type="string", length=1, nullable=true)
     */
    private $secondPhoneType;

    /**
     * @var string
     *
     * @ORM\Column(name="elected_office_held", type="string", length=45, nullable=true)
     */
    private $electedOfficeHeld;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="hold_elected_office_st_date", type="datetime", nullable=true)
     */
    private $holdElectedOfficeStDate;

    /**
     * @var string
     *
     * @ORM\Column(name="state_house_district", type="string", length=45, nullable=true)
     */
    private $stateHouseDistrict;

    /**
     * @var string
     *
     * @ORM\Column(name="state_senate_district", type="string", length=45, nullable=true)
     */
    private $stateSenateDistrict;

    /**
     * @var string
     *
     * @ORM\Column(name="fed_house_district", type="string", length=45, nullable=true)
     */
    private $fedHouseDistrict;

    /**
     * @var boolean
     *
     * @ORM\Column(name="is_registered_voter", type="boolean", nullable=true)
     */
    private $isRegisteredVoter;

    /**
     * @var string
     *
     * @ORM\Column(name="authorize_customer_id", type="string", length=20, nullable=true)
     */
    private $authorizeCustomerId;

    /**
     * @var string
     *
     * @ORM\Column(name="pid", type="string", length=8, nullable=true)
     */
    private $pid;

    /**
     * @var string
     *
     * @ORM\Column(name="note", type="text", nullable=true)
     */
    private $note;

    /**
     * @var string
     *
     * @ORM\Column(name="cell", type="string", length=15, nullable=true)
     */
    private $cell;

    /**
     * @var boolean
     *
     * @ORM\Column(name="recurring", type="boolean", nullable=true)
     */
    private $recurring;

    /**
     * @var string
     *
     * @ORM\Column(name="recurring_date", type="string", length=15, nullable=true)
     */
    private $recurringDate;

    /**
     * @var string
     *
     * @ORM\Column(name="recurring_profile_id", type="string", length=30, nullable=true)
     */
    private $recurringProfileId;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="card_sent_date", type="datetime", nullable=true)
     */
    private $cardSentDate;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="packet_sent_date", type="datetime", nullable=true)
     */
    private $packetSentDate;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="money_date", type="datetime", nullable=true)
     */
    private $moneyDate;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="dues_date", type="datetime", nullable=true)
     */
    private $duesDate;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="birth_date", type="datetime", nullable=true)
     */
    private $birthDate;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="status_date", type="datetime", nullable=true)
     */
    private $statusDate;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="join_packet_sent_date", type="datetime", nullable=true)
     */
    private $joinPacketSentDate;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="card_requested_date", type="datetime", nullable=true)
     */
    private $cardRequestedDate;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="packet_requested_date", type="datetime", nullable=true)
     */
    private $packetRequestedDate;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="join_packet_requested_date", type="datetime", nullable=true)
     */
    private $joinPacketRequestedDate;

    /**
     * @var string
     *
     * @ORM\Column(name="home_phone", type="string", length=15, nullable=true)
     */
    private $homePhone;

    /**
     * @var string
     *
     * @ORM\Column(name="work_phone", type="string", length=15, nullable=true)
     */
    private $workPhone;

    /**
     * @var \MemberStatusType
     *
     * @ORM\ManyToOne(targetEntity="MemberStatusType")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="member_status_type_id", referencedColumnName="id")
     * })
     */
    private $memberStatusType;

    /**
     * @var \EmployeeType
     *
     * @ORM\ManyToOne(targetEntity="EmployeeType")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="employeeType_id", referencedColumnName="id")
     * })
     */
    private $employeetype;

    /**
     * @var \Local
     *
     * @ORM\ManyToOne(targetEntity="Local")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="local_id", referencedColumnName="id")
     * })
     */
    private $local;

    /**
     * @var \PaymentType
     *
     * @ORM\ManyToOne(targetEntity="PaymentType")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="payment_type_id", referencedColumnName="id")
     * })
     */
    private $paymentType;

    /**
     * @var \Doctrine\Common\Collections\Collection
     *
     * @ORM\ManyToMany(targetEntity="Document", mappedBy="member")
     */
    private $document;

    /**
     * @var \Doctrine\Common\Collections\Collection
     *
     * @ORM\ManyToMany(targetEntity="Address", inversedBy="member")
     * @ORM\JoinTable(name="member_address",
     *   joinColumns={
     *     @ORM\JoinColumn(name="member_id", referencedColumnName="id")
     *   },
     *   inverseJoinColumns={
     *     @ORM\JoinColumn(name="address_id", referencedColumnName="id")
     *   }
     * )
     */
    private $address;

    /**
     * @var \Doctrine\Common\Collections\Collection
     *
     * @ORM\ManyToMany(targetEntity="Beneficiary", inversedBy="member")
     * @ORM\JoinTable(name="member_beneficiary",
     *   joinColumns={
     *     @ORM\JoinColumn(name="member_id", referencedColumnName="id")
     *   },
     *   inverseJoinColumns={
     *     @ORM\JoinColumn(name="beneficiary_id", referencedColumnName="id")
     *   }
     * )
     */
    private $beneficiary;

    /**
     * @var \Doctrine\Common\Collections\Collection
     *
     * @ORM\ManyToMany(targetEntity="Statement", inversedBy="member")
     * @ORM\JoinTable(name="member_statement",
     *   joinColumns={
     *     @ORM\JoinColumn(name="member_id", referencedColumnName="id")
     *   },
     *   inverseJoinColumns={
     *     @ORM\JoinColumn(name="statement_id", referencedColumnName="id")
     *   }
     * )
     */
    private $statement;

    /**
     * Constructor
     */
    public function __construct()
    {
        $this->document = new \Doctrine\Common\Collections\ArrayCollection();
        $this->address = new \Doctrine\Common\Collections\ArrayCollection();
        $this->beneficiary = new \Doctrine\Common\Collections\ArrayCollection();
        $this->statement = new \Doctrine\Common\Collections\ArrayCollection();
    }

}
